name: Deploy to AWS ECS
on:
  push:
    branches: [ master ]

env:
        AWS_REGION: ap-southeast-1                  # set this to your preferred AWS region, e.g. us-west-1
        ECR_REPOSITORY: geeth-test         # set this to your Amazon ECR repository name
        ECS_SERVICE: geeth-ecs                 # set this to your Amazon ECS service name
        ECS_CLUSTER: geeth-ecs        # set this to your Amazon ECS cluster name
        ECS_TASK_DEFINITION: geeth-ecs # set this to the path to your Amazon ECS task definition               # file, e.g. .aws/task-definition.json
        CONTAINER_NAME: geeth-springboot           # set this to the name of the container in the
                                                     # containerDefinitions section of your task definition


jobs:
  build-and-deploy:
    runs-on: [ ubuntu-latest ]
    steps:
      - name: Checkout source
        uses: actions/checkout@v3

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build Project
        run: mvn clean install -DskipTests

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-southeast-1'

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      - name: Build, tag, and push image to Amazon ECR
        id: geeth-springboot
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: ${{ env.ECR_REPOSITORY }}
        run: |
            # Build a docker container and
            # push it to ECR so that it can
            # be deployed to ECS.
            docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
            echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: geeth-ecs.json
          container-name: ${{ env.CONTAINER_NAME }}
          image: ${{ steps.geeth-springboot.outputs.image }}
          
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: ${{ env.ECS_SERVICE }}
          cluster: ${{ env.ECS_CLUSTER }}
          wait-for-service-stability: true